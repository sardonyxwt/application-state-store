{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dist/state-store.min.js","webpack:///webpack/bootstrap 0414f655628339ea32d1","webpack:///./src/index.ts","webpack:///./src/utils.ts"],"names":["root","factory","exports","module","define","amd","a","i","self","this","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","registerScope","initScopeState","scopeId","utils_1","uniqueId","scopes","set","actions","Map","listeners","scope","deepFreeze","registerAction","action","ROOT_SCOPE","Error","actionId","dispatch","props","Array","from","values","find","has","oldScope","Promise","resolve","reject","then","newScope","forEach","it","subscribe","listener","listenerId","unsubscribe","id","delete","getScope","getState","state","entries","_a","key","value","indexes","obj","getOwnPropertyNames","prop","freeze"],"mappings":"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","file":"./dist/state-store.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = __webpack_require__(1);\r\nvar scopes = new Map();\r\n/**\r\n * This scope id use by default.\r\n * @type {string}\r\n */\r\nexports.ROOT_SCOPE = registerScope('rootScope');\r\n/**\r\n * Registers a new scope and return id.\r\n * @param {string} name A prefix of create scope id.\r\n * @param {any} initScopeState The initial scope state.\r\n * By default use empty object.\r\n * @return {string} Id from registered scope.\r\n */\r\nfunction registerScope(name, initScopeState) {\r\n    if (name === void 0) { name = 'scope'; }\r\n    if (initScopeState === void 0) { initScopeState = {}; }\r\n    var scopeId = utils_1.uniqueId(name);\r\n    scopes.set(scopeId, {\r\n        actions: new Map(), listeners: new Map(), scope: utils_1.deepFreeze(initScopeState)\r\n    });\r\n    return scopeId;\r\n}\r\n/**\r\n * Registers a new action in scope and return action id.\r\n * @param {Action} action The action that changes the scope\r\n * when it is called.\r\n * @param {string} scopeId Id of the scope to register the action.\r\n * By default use ROOT_SCOPE id.\r\n * @return {string} Id from registered action.\r\n */\r\nfunction registerAction(action, scopeId) {\r\n    if (scopeId === void 0) { scopeId = exports.ROOT_SCOPE; }\r\n    var scope = scopes.get(scopeId);\r\n    if (!scope) {\r\n        throw new Error(\"Scope not exists \" + scopeId);\r\n    }\r\n    var actionId = utils_1.uniqueId('store_action');\r\n    scope.actions.set(actionId, action);\r\n    return actionId;\r\n}\r\n/**\r\n * Dispatches an action. It is the only way to trigger a scope change.\r\n * @param {string} actionId Triggered action id.\r\n * This action change scope and return new scope.\r\n * You can use resolve to change the scope or reject to throw an exception.\r\n * @param {any?} props Additional data for the correct operation of the action.\r\n * @return {Promise<any>} You can use the promise to get a new state of scope\r\n * or catch errors\r\n */\r\nfunction dispatch(actionId, props) {\r\n    var scope = Array.from(scopes.values()).find(function (scope) { return scope.actions.has(actionId); });\r\n    if (!scope) {\r\n        throw new Error(\"This action not exists \" + actionId);\r\n    }\r\n    var action = scope.actions.get(actionId);\r\n    var oldScope = scope.scope;\r\n    return new Promise(function (resolve, reject) {\r\n        action(oldScope, props, resolve, reject);\r\n    }).then(function (newScope) {\r\n        utils_1.deepFreeze(newScope);\r\n        scope.listeners.forEach(function (it) { return it({ oldScope: oldScope, newScope: newScope, actionId: actionId }); });\r\n        scope.scope = newScope;\r\n        return newScope;\r\n    });\r\n}\r\n/**\r\n * Adds a scope change listener.\r\n * It will be called any time an action is dispatched.\r\n * @param {Listener} listener A callback to be invoked on every dispatch.\r\n * @param {string} scopeId Id of the scope to subscribe the listener.\r\n * By default use ROOT_SCOPE id.\r\n * @return {string} A listener id to remove this change listener later.\r\n */\r\nfunction subscribe(listener, scopeId) {\r\n    if (scopeId === void 0) { scopeId = exports.ROOT_SCOPE; }\r\n    var scope = scopes.get(scopeId);\r\n    if (!scope) {\r\n        throw new Error(\"This scope not exists \" + scopeId);\r\n    }\r\n    var listenerId = utils_1.uniqueId('listener');\r\n    scope.listeners.set(listenerId, listener);\r\n    return listenerId;\r\n}\r\n/**\r\n * Removes a scope change listener.\r\n * @param {string} id Id of the listener to delete.\r\n */\r\nfunction unsubscribe(id) {\r\n    scopes.forEach(function (scope) { return scope.listeners.delete(id); });\r\n}\r\n/**\r\n * Returns scope state.\r\n * @param {string} scopeId Id scope, to get the state.\r\n * By default use ROOT_SCOPE id.\r\n * @return {any} Scope state\r\n */\r\nfunction getScope(scopeId) {\r\n    if (scopeId === void 0) { scopeId = exports.ROOT_SCOPE; }\r\n    var scope = scopes.get(scopeId);\r\n    if (!scope) {\r\n        throw new Error(\"Scope not exists \" + scopeId);\r\n    }\r\n    return scope.scope;\r\n}\r\n/**\r\n * Returns all scope states.\r\n * @return {{string: any}} Scope states\r\n */\r\nfunction getState() {\r\n    var state = {};\r\n    Array.from(scopes.entries()).forEach(function (_a) {\r\n        var key = _a[0], scope = _a[1];\r\n        return state[key] = scope.scope;\r\n    });\r\n    return state;\r\n}\r\nexports.default = {\r\n    registerScope: registerScope,\r\n    registerAction: registerAction,\r\n    dispatch: dispatch,\r\n    subscribe: subscribe,\r\n    unsubscribe: unsubscribe,\r\n    getScope: getScope,\r\n    getState: getState\r\n};\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar indexes = {};\r\nfunction uniqueId(name) {\r\n    if (name === void 0) { name = 'default'; }\r\n    indexes[name] ? ++indexes[name] : indexes[name] = 0;\r\n    var index = indexes[name];\r\n    return \"\" + name + (index ? index : '');\r\n}\r\nexports.uniqueId = uniqueId;\r\nfunction deepFreeze(obj) {\r\n    Object.getOwnPropertyNames(obj).forEach(function (key) {\r\n        var prop = obj[key];\r\n        if (typeof prop == 'object' && prop !== null) {\r\n            deepFreeze(prop);\r\n        }\r\n    });\r\n    return Object.freeze(obj);\r\n}\r\nexports.deepFreeze = deepFreeze;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// dist/state-store.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0414f655628339ea32d1","import {uniqueId, deepFreeze} from './utils';\n\ntype Listener = (event: { newScope, oldScope, actionId: string }) => void;\ntype Action = (scope, props, resolve: (newScope) => void, reject: (error) => void) => void;\ntype Scope = { scope, actions: Map<string, Action>, listeners: Map<string, Listener> };\n\nconst scopes: Map<string, Scope> = new Map();\n\n/**\n * This scope id use by default.\n * @type {string}\n */\nexport const ROOT_SCOPE = registerScope('rootScope');\n\n/**\n * Registers a new scope and return id.\n * @param {string} name A prefix of create scope id.\n * @param {any} initScopeState The initial scope state.\n * By default use empty object.\n * @return {string} Id from registered scope.\n */\nfunction registerScope(name = 'scope', initScopeState = {}) {\n  const scopeId = uniqueId(name);\n  scopes.set(scopeId, {\n    actions: new Map(), listeners: new Map(), scope: deepFreeze(initScopeState)\n  });\n  return scopeId;\n}\n\n/**\n * Registers a new action in scope and return action id.\n * @param {Action} action The action that changes the scope\n * when it is called.\n * @param {string} scopeId Id of the scope to register the action.\n * By default use ROOT_SCOPE id.\n * @return {string} Id from registered action.\n */\nfunction registerAction(action: Action, scopeId = ROOT_SCOPE) {\n  const scope = scopes.get(scopeId);\n  if (!scope) {\n    throw new Error(`Scope not exists ${scopeId}`);\n  }\n  const actionId = uniqueId('store_action');\n  scope.actions.set(actionId, action);\n  return actionId;\n}\n\n/**\n * Dispatches an action. It is the only way to trigger a scope change.\n * @param {string} actionId Triggered action id.\n * This action change scope and return new scope.\n * You can use resolve to change the scope or reject to throw an exception.\n * @param {any?} props Additional data for the correct operation of the action.\n * @return {Promise<any>} You can use the promise to get a new state of scope\n * or catch errors\n */\nfunction dispatch(actionId: string, props?) {\n  const scope = Array.from(scopes.values()).find(\n    scope => scope.actions.has(actionId)\n  );\n  if (!scope) {\n    throw new Error(`This action not exists ${actionId}`);\n  }\n  const action: Action = scope.actions.get(actionId);\n  const oldScope = scope.scope;\n  return new Promise((resolve, reject) => {\n    action(oldScope, props, resolve, reject);\n  }).then(newScope => {\n    deepFreeze(newScope);\n    scope.listeners.forEach(\n      it => it({oldScope, newScope, actionId})\n    );\n    scope.scope = newScope;\n    return newScope;\n  });\n}\n\n/**\n * Adds a scope change listener.\n * It will be called any time an action is dispatched.\n * @param {Listener} listener A callback to be invoked on every dispatch.\n * @param {string} scopeId Id of the scope to subscribe the listener.\n * By default use ROOT_SCOPE id.\n * @return {string} A listener id to remove this change listener later.\n */\nfunction subscribe(listener: Listener, scopeId = ROOT_SCOPE) {\n  const scope = scopes.get(scopeId);\n  if (!scope) {\n    throw new Error(`This scope not exists ${scopeId}`);\n  }\n  const listenerId = uniqueId('listener');\n  scope.listeners.set(listenerId, listener);\n  return listenerId;\n}\n\n/**\n * Removes a scope change listener.\n * @param {string} id Id of the listener to delete.\n */\nfunction unsubscribe(id: string) {\n  scopes.forEach(scope => scope.listeners.delete(id));\n}\n\n/**\n * Returns scope state.\n * @param {string} scopeId Id scope, to get the state.\n * By default use ROOT_SCOPE id.\n * @return {any} Scope state\n */\nfunction getScope(scopeId = ROOT_SCOPE) {\n  const scope = scopes.get(scopeId);\n  if (!scope) {\n    throw new Error(`Scope not exists ${scopeId}`);\n  }\n  return scope.scope;\n}\n\n/**\n * Returns all scope states.\n * @return {{string: any}} Scope states\n */\nfunction getState() {\n  const state = {};\n  Array.from(scopes.entries()).forEach(\n    ([key, scope]) => state[key] = scope.scope\n  );\n  return state;\n}\n\nexport default {\n  registerScope,\n  registerAction,\n  dispatch,\n  subscribe,\n  unsubscribe,\n  getScope,\n  getState\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","let indexes: { [key: string]: number } = {};\n\nexport function uniqueId(name: string = 'default') {\n  indexes[name] ? ++indexes[name] : indexes[name] = 0;\n  let index = indexes[name];\n  return `${name}${index ? index : ''}`;\n}\n\nexport function deepFreeze<T>(obj: T) {\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    let prop = obj[key];\n    if (typeof prop == 'object' && prop !== null) {\n      deepFreeze(prop);\n    }\n  });\n  return Object.freeze(obj);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts"],"sourceRoot":""}